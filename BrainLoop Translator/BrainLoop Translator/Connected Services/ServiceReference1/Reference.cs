//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BrainLoop_Translator.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ITranslatorService")]
    public interface ITranslatorService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITranslatorService/GetTranslation", ReplyAction="http://tempuri.org/ITranslatorService/GetTranslationResponse")]
        string GetTranslation(string targetLanguage, string textTotranslate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITranslatorService/GetTranslation", ReplyAction="http://tempuri.org/ITranslatorService/GetTranslationResponse")]
        System.Threading.Tasks.Task<string> GetTranslationAsync(string targetLanguage, string textTotranslate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITranslatorService/DetectLanguage", ReplyAction="http://tempuri.org/ITranslatorService/DetectLanguageResponse")]
        string DetectLanguage(string TextToDetect);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITranslatorService/DetectLanguage", ReplyAction="http://tempuri.org/ITranslatorService/DetectLanguageResponse")]
        System.Threading.Tasks.Task<string> DetectLanguageAsync(string TextToDetect);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITranslatorService/GetLanguageList", ReplyAction="http://tempuri.org/ITranslatorService/GetLanguageListResponse")]
        string[] GetLanguageList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITranslatorService/GetLanguageList", ReplyAction="http://tempuri.org/ITranslatorService/GetLanguageListResponse")]
        System.Threading.Tasks.Task<string[]> GetLanguageListAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITranslatorServiceChannel : BrainLoop_Translator.ServiceReference1.ITranslatorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TranslatorServiceClient : System.ServiceModel.ClientBase<BrainLoop_Translator.ServiceReference1.ITranslatorService>, BrainLoop_Translator.ServiceReference1.ITranslatorService {
        
        public TranslatorServiceClient() {
        }
        
        public TranslatorServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TranslatorServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TranslatorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TranslatorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetTranslation(string targetLanguage, string textTotranslate) {
            return base.Channel.GetTranslation(targetLanguage, textTotranslate);
        }
        
        public System.Threading.Tasks.Task<string> GetTranslationAsync(string targetLanguage, string textTotranslate) {
            return base.Channel.GetTranslationAsync(targetLanguage, textTotranslate);
        }
        
        public string DetectLanguage(string TextToDetect) {
            return base.Channel.DetectLanguage(TextToDetect);
        }
        
        public System.Threading.Tasks.Task<string> DetectLanguageAsync(string TextToDetect) {
            return base.Channel.DetectLanguageAsync(TextToDetect);
        }
        
        public string[] GetLanguageList() {
            return base.Channel.GetLanguageList();
        }
        
        public System.Threading.Tasks.Task<string[]> GetLanguageListAsync() {
            return base.Channel.GetLanguageListAsync();
        }
    }
}
